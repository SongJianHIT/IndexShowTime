<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tech.songjian.stock.mapper.SysUserMapper">

    <resultMap id="BaseResultMap" type="tech.songjian.stock.pojo.SysUser">
            <id property="id" column="id" jdbcType="VARCHAR"/>
            <result property="username" column="username" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="phone" column="phone" jdbcType="VARCHAR"/>
            <result property="realName" column="real_name" jdbcType="VARCHAR"/>
            <result property="nickName" column="nick_name" jdbcType="VARCHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
            <result property="status" column="status" jdbcType="TINYINT"/>
            <result property="sex" column="sex" jdbcType="TINYINT"/>
            <result property="deleted" column="deleted" jdbcType="TINYINT"/>
            <result property="createId" column="create_id" jdbcType="VARCHAR"/>
            <result property="updateId" column="update_id" jdbcType="VARCHAR"/>
            <result property="createWhere" column="create_where" jdbcType="TINYINT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,username,password,
        phone,real_name,nick_name,
        email,status,sex,
        deleted,create_id,update_id,
        create_where,create_time,update_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from sys_user
        where  id = #{id,jdbcType=VARCHAR}
    </select>
    <select id="findUserInfoByUserName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from sys_user
        where username=#{username}
    </select>
    <!--
       登录时 根据用户名查询 用户和权限信息
   -->
    <resultMap id="getUserPermissionInfoMap" type="tech.songjian.stock.pojo.SysUser" autoMapping="true">
        <id column="id" property="id"/>
        <collection property="permissions" javaType="List" ofType="tech.songjian.stock.pojo.SysPermission"
                    autoMapping="true">
            <id column="pid" property="id"/>
            <result column="pName" property="name"/>
            <result column="ppid" property="pid"/>
            <result column="pStatus" property="status"/>
        </collection>
    </resultMap>
    <select id="getUserPermissionInfo" resultMap="getUserPermissionInfoMap">
        select u.id,
               u.username,
               u.phone,
               u.nick_name nickName,
               u.real_name realName,
               u.sex,
               u.status,
               u.email,
               p.id        pid,
               p.title,
               p.icon,
               p.url       path,
               p.name      pName,
               p.pid       ppid,
               p.status    pStatus,
               p.perms
        from sys_user u
                 inner join sys_user_role ur on u.id = ur.user_id
                 inner join sys_role r on ur.role_id = r.id
                 inner join sys_role_permission rp on r.id = rp.role_id
                 inner join sys_permission p on rp.permission_id = p.id
        where u.username = #{username};
    </select>
    <select id="conditionQueryUser" resultType="tech.songjian.stock.pojo.SysUser">
        SELECT
        u1.*,
        u2.username AS createUserName,
        u3.username AS updateUserName
        FROM
        sys_user u1
        LEFT JOIN sys_user u2 on u1.create_id = u2.id
        LEFT JOIN sys_user u3 on u1.update_id = u3.id
        <where>
            <if test="req.username!=null and req.username!=''">
                u1.username = #{req.username}
            </if>
            <if test="req.nickName!=null and req.nickName!=''">
                and u1.nick_name = #{req.nickName}
            </if>
            <if test="req.startTime!=null and req.startTime.trim()!=''">
                and u1.create_time &gt;=#{req.startTime}
            </if>
            <if test="req.endTime!=null and req.endTime.trim()!=''">
                and u1.create_time &lt;=#{req.endTime}
            </if>
        </where>
    </select>
    <select id="getUserInfoById" resultType="tech.songjian.stock.vo.resp.GetUserInfoVo">
        select
            su.id as id,
            su.username as username,
            su.phone as phone,
            su.nick_name as nickName,
            su.real_name as realName,
            su.sex as sex,
            su.status as status,
            su.email as email
        from sys_user as su
        where su.id = #{userId}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from sys_user
        where  id = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByUserId">
        delete from sys_user
        where  id = #{id}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="tech.songjian.stock.pojo.SysUser" useGeneratedKeys="true">
        insert into sys_user
        ( id,username,password
        ,phone,real_name,nick_name
        ,email,status,sex
        ,deleted,create_id,update_id
        ,create_where,create_time,update_time
        )
        values (#{id,jdbcType=VARCHAR},#{username,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR}
        ,#{phone,jdbcType=VARCHAR},#{realName,jdbcType=VARCHAR},#{nickName,jdbcType=VARCHAR}
        ,#{email,jdbcType=VARCHAR},#{status,jdbcType=TINYINT},#{sex,jdbcType=TINYINT}
        ,#{deleted,jdbcType=TINYINT},#{createId,jdbcType=VARCHAR},#{updateId,jdbcType=VARCHAR}
        ,#{createWhere,jdbcType=TINYINT},#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="tech.songjian.stock.pojo.SysUser" useGeneratedKeys="true">
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="username != null">username,</if>
                <if test="password != null">password,</if>
                <if test="phone != null">phone,</if>
                <if test="realName != null">realName,</if>
                <if test="nickName != null">nickName,</if>
                <if test="email != null">email,</if>
                <if test="status != null">status,</if>
                <if test="sex != null">sex,</if>
                <if test="deleted != null">deleted,</if>
                <if test="createId != null">createId,</if>
                <if test="updateId != null">updateId,</if>
                <if test="createWhere != null">createWhere,</if>
                <if test="createTime != null">createTime,</if>
                <if test="updateTime != null">updateTime,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">id = #{id,jdbcType=VARCHAR},</if>
                <if test="username != null">username = #{username,jdbcType=VARCHAR},</if>
                <if test="password != null">password = #{password,jdbcType=VARCHAR},</if>
                <if test="phone != null">phone = #{phone,jdbcType=VARCHAR},</if>
                <if test="realName != null">real_name = #{realName,jdbcType=VARCHAR},</if>
                <if test="nickName != null">nick_name = #{nickName,jdbcType=VARCHAR},</if>
                <if test="email != null">email = #{email,jdbcType=VARCHAR},</if>
                <if test="status != null">status = #{status,jdbcType=TINYINT},</if>
                <if test="sex != null">sex = #{sex,jdbcType=TINYINT},</if>
                <if test="deleted != null">deleted = #{deleted,jdbcType=TINYINT},</if>
                <if test="createId != null">create_id = #{createId,jdbcType=VARCHAR},</if>
                <if test="updateId != null">update_id = #{updateId,jdbcType=VARCHAR},</if>
                <if test="createWhere != null">create_where = #{createWhere,jdbcType=TINYINT},</if>
                <if test="createTime != null">create_time = #{createTime,jdbcType=TIMESTAMP},</if>
                <if test="updateTime != null">update_time = #{updateTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <insert id="insertUser">
        insert into sys_user
        ( id,username,password
        ,phone,real_name,nick_name
        ,email,status,sex
        ,deleted,create_id,update_id
        ,create_where,create_time,update_time
        )
        values (#{user.id,jdbcType=VARCHAR},#{user.username,jdbcType=VARCHAR},#{user.password,jdbcType=VARCHAR}
               ,#{user.phone,jdbcType=VARCHAR},#{user.realName,jdbcType=VARCHAR},#{user.nickName,jdbcType=VARCHAR}
               ,#{user.email,jdbcType=VARCHAR},#{user.status,jdbcType=TINYINT},#{user.sex,jdbcType=TINYINT}
               ,#{user.deleted,jdbcType=TINYINT},#{user.createId,jdbcType=VARCHAR},#{user.updateId,jdbcType=VARCHAR}
               ,#{user.createWhere,jdbcType=TINYINT},#{user.createTime,jdbcType=TIMESTAMP},#{user.updateTime,jdbcType=TIMESTAMP}
               )
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="tech.songjian.stock.pojo.SysUser">
        update sys_user
        <set>
                <if test="username != null">
                    username = #{username,jdbcType=VARCHAR},
                </if>
                <if test="password != null">
                    password = #{password,jdbcType=VARCHAR},
                </if>
                <if test="phone != null">
                    phone = #{phone,jdbcType=VARCHAR},
                </if>
                <if test="realName != null">
                    real_name = #{realName,jdbcType=VARCHAR},
                </if>
                <if test="nickName != null">
                    nick_name = #{nickName,jdbcType=VARCHAR},
                </if>
                <if test="email != null">
                    email = #{email,jdbcType=VARCHAR},
                </if>
                <if test="status != null">
                    status = #{status,jdbcType=TINYINT},
                </if>
                <if test="sex != null">
                    sex = #{sex,jdbcType=TINYINT},
                </if>
                <if test="deleted != null">
                    deleted = #{deleted,jdbcType=TINYINT},
                </if>
                <if test="createId != null">
                    create_id = #{createId,jdbcType=VARCHAR},
                </if>
                <if test="updateId != null">
                    update_id = #{updateId,jdbcType=VARCHAR},
                </if>
                <if test="createWhere != null">
                    create_where = #{createWhere,jdbcType=TINYINT},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updateTime != null">
                    update_time = #{updateTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="tech.songjian.stock.pojo.SysUser">
        update sys_user
        set
            username =  #{username,jdbcType=VARCHAR},
            password =  #{password,jdbcType=VARCHAR},
            phone =  #{phone,jdbcType=VARCHAR},
            real_name =  #{realName,jdbcType=VARCHAR},
            nick_name =  #{nickName,jdbcType=VARCHAR},
            email =  #{email,jdbcType=VARCHAR},
            status =  #{status,jdbcType=TINYINT},
            sex =  #{sex,jdbcType=TINYINT},
            deleted =  #{deleted,jdbcType=TINYINT},
            create_id =  #{createId,jdbcType=VARCHAR},
            update_id =  #{updateId,jdbcType=VARCHAR},
            create_where =  #{createWhere,jdbcType=TINYINT},
            create_time =  #{createTime,jdbcType=TIMESTAMP},
            update_time =  #{updateTime,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateUserInfo">
        update sys_user
        set
            username =  #{user.username},
            phone =  #{user.phone},
            real_name =  #{user.realName},
            nick_name =  #{user.nickName},
            email =  #{user.email},
            status =  #{user.status},
            sex =  #{user.sex},
            update_id =  #{user.updateId},
            create_where =  #{user.createWhere},
            update_time =  #{user.updateTime}
        where   id = #{user.id}
    </update>
</mapper>
